{"version":3,"file":"index.js","sources":["../src/Util.ts","../src/RequestContext.ts","../src/Context.ts","../src/signer/const.ts","../src/signer/Credentials.ts","../src/signer/index.ts"],"sourcesContent":["\nimport crypto, {HexBase64Latin1Encoding} from 'crypto'\nimport {Buffer} from \"buffer\";\nexport interface KeyValue {\n  [key:string]:any\n}\nexport default class Util {\n   static queryParamsToString(params:KeyValue):string\n   {\n     let escape = Util.uriEscape\n     let escapKeyValues:KeyValue={}\n\n     let unescape=(item:string)=>{\n       item=global.unescape(item)\n       return item\n     }\n     for(let key in params)\n     {\n       let value=params[key]\n       if(Array.isArray(value))\n       {\n         value=value.map(d=>{\n           return unescape(d)\n         })\n       }\n       else\n         value=unescape(value)\n       key=unescape(key)\n\n       let escapeKey=escape(key)\n       let escapeWithArray=(value:string|string[])=>{\n         if(Array.isArray(value))\n         {\n           return value.map(d=>escape(d))\n         }\n         return escape(value)\n       }\n       escapKeyValues[escapeKey]=escapeWithArray(value)\n     }\n\n     var sortedKeys = Object.keys(escapKeyValues).sort()\n\n     let items:string[] =sortedKeys.map(name=>{\n       let value = escapKeyValues[name]\n       let  ename = name\n       let  result = ename + '='\n       if (Array.isArray(value)) {\n         result = ename + '=' + value.sort().join('&' + ename + '=')\n       } else if (value !== undefined && value !== null) {\n         result = ename + '=' + value\n       }\n       return result\n     })\n\n     return items.join('&')\n   }\n\n   static uriEscape (str:string) {\n     var output = encodeURIComponent(str)\n     output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape)\n\n     // AWS percent-encodes some extra non-standard characters in a URI\n     output = output.replace(/[*]/g, function (ch) {\n       return (\n         '%' +\n         ch\n           .charCodeAt(0)\n           .toString(16)\n           .toUpperCase()\n       )\n     })\n\n     return output\n   }\n\n   static  uriEscapePath (path:string) {\n    return path.split(\"/\").map(part=>Util.uriEscape(part)).join(\"/\")\n   }\n\n   static hmac (key:string|Buffer, string:string|Buffer, digest:any, fn?:string):Buffer|string {\n\n    if (digest === 'buffer') {\n      digest = undefined\n    }\n    if (!fn) fn = 'sha256'\n    if (typeof string === 'string') string =  Buffer.from(string)\n    return  crypto\n      .createHmac(fn, key)\n      .update(string)\n      .digest(digest)\n  }\n\n  static sha256(data:string,digest:HexBase64Latin1Encoding='hex')\n  {\n     return  crypto.createHash('sha256').update(data).digest(digest)\n  }\n\n\n\n  static  iso8601 (date?:Date) {\n    if(!date)\n      date=new Date()\n    return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z')\n  }\n\n\n}\n","import uuid from 'uuid'\nimport Util ,{KeyValue} from \"./Util\";\n\n\n  const NOUNCEHEADER='x-jdcloud-nonce'\n\n  export type Header=Map<string,string>\n\n  export  class RequestContext {\n    host:string\n    headers:Header\n    method:string\n    path:string\n    serviceName:string\n    regionId:string\n    query:string=''\n    constructor(host:string,path:string,method:string,headers:Header,serviceName:string='',regionId:string='') {\n      if(!host)\n        throw new Error(\"host is required\")\n      if(!path)\n        throw new Error(\"path is required\")\n      if(!method)\n        throw new Error(\"method is required\")\n\n      if(!path.startsWith('/'))\n        path='/'+path\n      this.host=host\n      this.headers=headers\n      this.method=method.toUpperCase()\n      this.path=path\n      this.serviceName=serviceName\n      this.regionId=regionId\n    }\n\n    get pathName():string\n    {\n      let path=this.path.replace(/\\+/g,\" \")\n      path=unescape(path)\n      return path.replace(/(\\/{2,})/g,'/')\n    }\n\n    buildNonce():void\n    {\n      this.headers.set(NOUNCEHEADER,uuid.v4())\n    }\n\n    setNonce(nonce:string)\n    {\n      this.headers.set(NOUNCEHEADER,nonce)\n    }\n\n    check()\n    {\n      if(![...this.headers.keys()].find(d=>d.toLowerCase()===NOUNCEHEADER))\n        throw new Error(\"header['x-jdcloud-nonce'] is required\")\n      if(!this.regionId)\n        throw new Error(\"regionId is required\")\n    }\n\n    buildQuery (queryParams:KeyValue):string {\n      var queryParamsWithoutEmptyItem:KeyValue = {}\n      var keys = Object.keys(queryParams)\n      for (let key of keys) {\n        if (key !== undefined&&key!=='') {\n          queryParamsWithoutEmptyItem[key] = queryParams[key]\n        }\n      }\n      return Util.queryParamsToString(queryParamsWithoutEmptyItem)\n    }\n  }\n\n\n\n","\n  import UrlParse from 'url'\n  import {Header,RequestContext} from \"./RequestContext\";\n  \n  export  class Context extends RequestContext{\n    body:string\n\n    constructor(url:string,method:string,headers:Header,body:string,serviceName:string='',regionId:string='') {\n      let urlResult=UrlParse.parse(url,true)\n      super(urlResult.host!,urlResult.pathname!,method,headers,serviceName,regionId)\n      this.body=body\n      this.query=super.buildQuery(urlResult.query)\n    }\n  }\n\n\n\n","const VERSION='JDCLOUD3'\n\nconst HEADERDATE='x-jdcloud-date'\nconst HEADERNOUNCE='x-jdcloud-nonce'\nconst HEADERHOST='host'\n\nconst BLACKLIST=[\n  'cache-control',\n  'content-type',\n  'content-length',\n  'host',\n  'expect',\n  'max-forwards',\n  'pragma',\n  'range',\n  'te',\n  'if-match',\n  'if-none-match',\n  'if-modified-since',\n  'if-unmodified-since',\n  'if-range',\n  'accept',\n  'authorization',\n  'proxy-authorization',\n  'from',\n  'referer',\n  'user-agent',\n  'x-jdcloud-request-id']\n\n\nexport {\n  VERSION,\n  HEADERDATE,\n  HEADERNOUNCE,\n  HEADERHOST,\n  BLACKLIST\n}\n","import {VERSION} from \"./const\";\nimport Util from \"../Util\";\nimport debugLog from 'debug'\n\nconst debug=debugLog('signer')\n\nexport interface CredentialInfo {\n  secretAccessKey:string\n  accessKeyId:string\n}\nconst IDENTIFIER = 'jdcloud3_request'\nconst maxCacheEntries = 50\n\nconst cachedSecret:{[key:string]:string|Buffer} = {}\nconst cacheQueue:string[] = []\n\nexport default class Credentials {\n   credentialInfo:CredentialInfo\n   private region:string\n   private service:string\n   private shouldCache:boolean\n   constructor(credentialInfo:CredentialInfo,region:string,service:string,shouldCache:boolean) {\n     this.credentialInfo=credentialInfo\n     this.region=region\n     this.service=service\n     this.shouldCache=shouldCache\n   }\n\n  createScope(date:string)\n  {\n    return [date.substr(0, 8), this.region,this.service, IDENTIFIER].join('/')\n  }\n\n  getSigningKey(date:string)\n  {\n    let {secretAccessKey,accessKeyId}=this.credentialInfo\n    let credsIdentifier = Util.hmac(\n      secretAccessKey,\n      accessKeyId,\n      'base64'\n    )\n    var cacheKey = [credsIdentifier, date, this.region, this.service].join('_')\n\n    if (this.shouldCache && cacheKey in cachedSecret) {\n      return cachedSecret[cacheKey]\n    }\n    let digest='buffer'\n\n    let kDate = Util.hmac(\n      VERSION + secretAccessKey,\n       date,digest\n    )\n    var kRegion = Util.hmac(kDate, this.region,digest)\n    var kService = Util.hmac(kRegion, this.service,digest)\n    var signingKey = Util.hmac(kService, IDENTIFIER,digest)\n    if (this.shouldCache) {\n      cachedSecret[cacheKey] = signingKey\n      cacheQueue.push(cacheKey)\n      if (cacheQueue.length > maxCacheEntries) {\n        delete cachedSecret[cacheQueue.shift()!]\n      }\n    }\n    debug('date',date)\n    debug('key', VERSION + secretAccessKey)\n    debug('kDate',kDate.toString())\n    debug('kRegion',kRegion.toString('hex'))\n    debug('kService',kService.toString('hex'))\n    debug('kSigning',signingKey.toString('hex'))\n    return signingKey\n  }\n}\n","import Credentials,{CredentialInfo} from \"./Credentials\";\nimport {VERSION,HEADERDATE,HEADERNOUNCE,HEADERHOST,BLACKLIST} from \"./const\";\nimport debugLog from 'debug'\nconst debug=debugLog('signer')\nimport Util from \"../Util\";\nimport {Header} from \"../RequestContext\";\nimport {Context} from \"../Context\";\n\nexport  class Signer {\n   private ctx:Context\n   private credentials:Credentials\n   private logger:(message?: any, ...optionalParams: any[])=>void\n\n   private algorithm:string=`${VERSION}-HMAC-SHA256`\n   private headers:Header\n   private signableHeaders:string[]=[]\n\n   constructor(ctx:Context,credentialsInfo:CredentialInfo,logger=console.log) {\n      this.ctx=ctx\n      this.credentials=this.getCredentials(ctx,credentialsInfo)\n      this.logger=logger\n      this.headers=ctx.headers\n      this.setSignableHeaders()\n   }\n\n   private getCredentials(ctx:Context,credentialInfo:CredentialInfo)\n   {\n     let {regionId,serviceName,}=ctx\n     return new Credentials(credentialInfo,regionId,serviceName,false)\n   }\n  private setSignableHeaders()\n  {\n    let headers=[HEADERNOUNCE]\n    let securityToken='x-jdcloud-security-token'\n    let sessionToken ='x-jdcloud-session-token'\n\n    if(this.headers.has(securityToken))\n      headers.push(securityToken)\n    if(this.headers.has(sessionToken))\n      headers.push(sessionToken)\n\n    for(let header of  this.headers.keys())\n    {\n      header=header.toLowerCase()\n      if(!BLACKLIST.find(d=>d===header))\n      {\n        headers.push(header)\n      }\n    }\n    this.signableHeaders=[...new Set(headers)]\n  }\n\n  sign(date:Date)\n  {\n    this.ctx.check()\n    var datetime = Util.iso8601(date).replace(/[:-]|\\.\\d{3}/g, '')\n\n    this.addHeaders(datetime)\n\n    return this.authorization(datetime)\n  }\n\n  private addAuthorization (date:Date) {\n\n    this.ctx.check()\n    var datetime = Util.iso8601(date).replace(/[:-]|\\.\\d{3}/g, '')\n    this.addHeaders(datetime)\n\n    if (!this.headers.has('x-jdcloud-oauth2-token')) {\n      this.headers.set('Authorization',this.authorization(datetime))\n    }\n  }\n  private authorization ( datetime:string) {\n    var parts = []\n    var credString = this.credentials.createScope(datetime)\n    parts.push(\n      this.algorithm +\n      ' Credential=' +\n      this.credentials.credentialInfo.accessKeyId +\n      '/' +\n      credString\n    )\n    parts.push('SignedHeaders=' + this.signedHeaders())\n    parts.push('Signature=' + this.signature(datetime))\n    this.log('Signature',parts)\n    return parts.join(', ')\n  }\n\n  private  signature (datetime:string) {\n    var signingKey = this.credentials.getSigningKey(datetime.substr(0, 8))\n    let signResult= Util.hmac(signingKey, this.stringToSign(datetime), 'hex')\n    debug('signResult',signResult)\n    return signResult\n  }\n\n  private credentialString (datetime:string) {\n     return this.credentials.createScope(datetime.substring(0,8))\n  }\n\n  private canonicalString () {\n    var parts = []\n    let pathname =Util.uriEscapePath(this.ctx.pathName)\n    parts.push(this.ctx.method)\n    parts.push(pathname)\n    parts.push(this.ctx.query||'')\n    parts.push(this.canonicalHeaders() + '\\n')\n    parts.push(this.signedHeaders())\n    parts.push( this.headers.get('x-jdcloud-content-sha256') || Util.sha256(this.ctx.body || ''))\n    this.log('canonicalString--step1',parts)\n    return parts.join('\\n')\n  }\n\n  private canonicalHeaders () {\n    let headers = []\n\n    for(let key of this.headers.keys())\n    {\n      headers.push([key,this.headers.get(key)])\n    }\n\n    headers.sort(function (a, b) {\n      return a[0]!.toLowerCase() < b[0]!.toLowerCase() ? -1 : 1\n    })\n\n    let parts=[]\n    for(let item of headers)\n    {\n      let key = item[0]!.toLowerCase()\n      if (this.isSignableHeader(key)) {\n        let value = item[1]\n        if (\n          typeof value === 'undefined' ||\n          value === null ||\n          typeof value.toString !== 'function'\n        ) {\n          let error=new Error('Header ' + key + ' contains invalid value')\n          throw error\n        }\n        parts.push(`${key}:${this.canonicalHeaderValues(value)}`)\n      }\n    }\n\n    return  parts.join(\"\\n\")\n\n  }\n  private log(title:string,parts:string[])\n  {\n    this.logger(`-----------${title}------------`)\n    for(let item of parts)\n    {\n      this.logger(item)\n    }\n    this.logger('--------------------------------')\n  }\n  private canonicalHeaderValues (values:string|string[]) {\n    let trim=(val:string)=>val.replace(/^\\s+|\\s+$/g, '')\n    if(Array.isArray(values))\n    {\n      return  values.map(d=>trim(d)).toString()\n    }\n    return values.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  private stringToSign (datetime:string) {\n    var parts = []\n    parts.push(this.algorithm)\n    parts.push(datetime)\n    parts.push(this.credentialString(datetime))\n    parts.push(Util.sha256(this.canonicalString()))\n\n    this.log('StringToSign--step2',parts)\n\n    return parts.join('\\n')\n  }\n\n  private  signedHeaders () {\n    let keys = new Set()\n    for(let key of this.headers.keys())\n    {\n      key = key.toLowerCase()\n      if (this.isSignableHeader(key)) {\n        keys.add(key)\n      }\n    }\n    return [...keys].sort().join(';')\n  }\n\n  private isSignableHeader (key:string) {\n    return this.signableHeaders.includes(key.toLowerCase())\n  }\n\n  private addHeaders (datetime:string) {\n    if(!this.headers.has(HEADERDATE))\n    {\n      this.headers.set(HEADERDATE,datetime)\n    }\n    if(!this.headers.has(HEADERHOST))\n    {\n      this.headers.set(HEADERHOST,this.ctx.host)\n    }\n  }\n\n}\n"],"names":["Buffer","crypto","uuid","UrlParse","debugLog","debug"],"mappings":"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"}